<?xml version="1.0"?> <project name="tools integral.time" basedir="." default="genBasedX"> <!--publishes the system environment variables So %JAVA_HOME% can be accessed as ${sysenv.JAVA_HOME}--> <property environment="sysenv"/> <!-- Project properties --> <property name="project.srcdir" value="${basedir}/src"/> <property name="lib.dir" value="${basedir}/lib"/> <property name="generator" value="${lib.dir}/is/generator-206.jar"/> <property name="dxCore.jar" value="${lib.dir}/is/dxCore.jar"/> <!--<property name="lib.cryptix" value="${lib.dir}\ext\cryptix32.jar"/>--> <property name="lib.resource" value="${lib.dir}/is/resource.jar"/> <property name="lib.toolbox" value="${lib.dir}\is\toolbox.jar"/> <property name="build.dir" value="${basedir}/build"/> <property name="build.project.dir" value="${build.dir}/integral.software/time"/> <property name="build.resdir" value="${build.project.dir}/res"/> <!-- sign stuff --> <property name="sign.keystore" value="${build.resdir}\keys\timestore"/> <property name="sign.alias" value="time"/> <property name="sign.keypass" value="integraltime"/> <property name="sign.storepass" value="keystore"/> <!-- Generate base classes with the dXGenerator --> <target name="genBasedX"> <mkdir dir="${project.srcdir}\de\lineas\integral\time\base\dx"/> <property name="gen.lisp" value="${dxCore.jar}!/templates/dxGenJava.lsp"/> <property name="gen.destination" value="${project.srcdir}\de\lineas\integral\time\base\dx"/> <property name="gen.xml" value="${basedir}\res\xml\IntegralTime.xml"/> <property name="gen.templates" value="${dxCore.jar}!/templates"/> <delete> <fileset dir="${gen.destination}" includes="*.java"/> </delete> <java classname="Lisp"> <arg value="${gen.lisp}"/> <arg value="${gen.xml}"/> <arg value="${gen.destination}"/> <arg value="${gen.templates}"/> <classpath> <pathelement path="${generator}"/> </classpath> </java> </target> <target name="build_admin_resources"> <!-- admin ini --> <concat append="true" destfile="${basedir}/build/admin.ini"> <filelist dir="${basedir}/res/ini/global/" files="admin.glob.ini"/> <filelist dir="${basedir}/res/ini/lit" files="rmidb.cus.ini,admin.cus.ini"/> </concat> </target> <target name="build_encrypted_resource"> <delete file="${basedir}/classes/time_resources/admin.ini"/> <delete file="${basedir}/classes/time_resources/admin.enc.ini"/> <delete file="${basedir}/classes/time_resources/server.ini"/> <delete file="${basedir}/classes/time_resources/server.enc.ini"/> <!-- admin ini --> <concat append="true" destfile="${basedir}/classes/time_resources/admin.ini"> <filelist dir="${basedir}/res/ini/global/" files="admin.glob.ini"/> <!--<filelist dir="${basedir}/res/ini/lit" files="rmidb.cus.ini,admin.cus.ini"/>--> <filelist dir="${basedir}/res/ini/approve" files="rmidb.cus.ini,admin.cus.ini"/> </concat> <antcall target="encrypt_file"> <param name="src" value="${basedir}/classes/time_resources/admin.ini"/> <param name="dest" value="${basedir}/classes/time_resources/admin.enc.ini"/> </antcall> <!-- server.ini --> <concat append="true" destfile="${basedir}/classes/time_resources/server.ini"> <filelist dir="${basedir}/res/ini/global/" files="server.glob.ini"/> <filelist dir="${basedir}/res/ini/approve" files="rmidb.cus.ini,server.cus.ini"/> </concat> <antcall target="encrypt_file"> <param name="src" value="${basedir}/classes/time_resources/server.ini"/> <param name="dest" value="${basedir}/classes/time_resources/server.enc.ini"/> </antcall> </target> <target name="encrypt_file"> <java classname="de.lineas.integral.time.util.FileCrypter" fork="true"> <arg value="-ec"/> <arg value="${src}"/> <arg value="${dest}"/> <classpath> <!--<pathelement path="${lib.cryptix}"/>--> <pathelement path="${lib.resource}"/> <pathelement path="${lib.toolbox}"/> <pathelement path="${basedir}/classes"/> </classpath> </java> </target> <target name="encrypt_file_interactive"> <input message="source" addproperty="src" defaultvalue="test/data/server.ini"/> <input message="dest" addproperty="dest" defaultvalue="test/data/server.enc.ini"/> <java classname="de.lineas.integral.time.util.FileCrypter" fork="true"> <arg value="-ec"/> <arg value="${src}"/> <arg value="${dest}"/> <classpath> <!--<pathelement path="${lib.cryptix}"/>--> <pathelement path="${lib.resource}"/> <pathelement path="${lib.toolbox}"/> <pathelement path="${basedir}/classes"/> </classpath> </java> </target> <target name="test_sign"> <!--<copy file="${dxCore.jar}" tofile="c:\temp\dxCore.jar"/>--> <copy file="${basedir}/build/integral.software/time/lib\db\oracle.jar" tofile="${basedir}/build/integral.software/time/lib\db\db.jar"/> <signjar jar="${basedir}/build/integral.software/time/lib\db\db.jar" keystore="${sign.keystore}" alias="${sign.alias}" storepass="${sign.storepass}" keypass="${sign.keypass}"/> </target> <target name="create_time_resources" description="Creates the directory time_resources containing the resources needed to start from IDEA"> <property name="project.time_resources" value="${basedir}/classes/time_resources"/> <delete dir="${project.time_resources}"/> <mkdir dir="${project.time_resources}"/> <!-- admin ini --> <concat append="true" destfile="${project.time_resources}/admin.ini"> <filelist dir="${basedir}/res/ini/global/" files="admin.glob.ini"/> <filelist dir="${basedir}/res/ini/approve" files="rmidb.cus.ini,admin.cus.ini"/> </concat> <!-- server ini --> <concat append="true" destfile="${project.time_resources}/server.ini"> <filelist dir="${basedir}/res/ini/global/" files="server.glob.ini"/> <filelist dir="${basedir}/res/ini/approve" files="rmidb.cus.ini,server.cus.ini"/> </concat> <!-- client ini --> <copy file="${basedir}/res/ini/approve/client.cus.ini" tofile="${project.time_resources}/client.ini" overwrite="yes" filtering="no"/> <!-- images --> <copy todir="${project.time_resources}/images"> <fileset dir="${basedir}/res/images" includes="*.png,*.gif"/> <fileset dir="${basedir}/res/images/approve" includes="*.png,*.gif"/> </copy> <!-- pdf --> <copy todir="${project.time_resources}"> <fileset dir="${basedir}/res/pdf" includes="*.pdf"/> </copy> <copy todir="${basedir}/time_resources" overwrite="yes"> <fileset dir="${project.time_resources}"/> </copy> </target> <!--<target name="manually_sign_all_libs" >--> <!--<property name="customer.driver" value="${lib.jdbc.oracle}"/>--> <!----> <!--</target>--> </project>